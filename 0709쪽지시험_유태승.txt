1. 클래스와 객체, 인스턴스는 서로 어떤 점이 다른가요?
클래스는 실제 세계의 객체를 추상화 하려는 데 존재의 이유이지만
객체는 클래스에 정의된 내용이 메모리에 생성되는것
인스턴스는 하나의 클래스에서 생성된 객체를 말한다.

2. 다음 코드에서 오류를 찾고, 오류의 원인을 설명 하세요.

class A
{

}

class B
{

}

class C
{
    public static void Mains()
    {
        A a = new A();
        B b = new B();
        A c = new B();
        B d = new A();
    }
}

A c = new B(), B d = new A()

클래스 B의 형식을 A로 변환할 수 없고, A의 형식을 B로 변환할 수 없다.

3. this 키워드 와 base 키워드에 대해 설명하세요.

this : 클래스 내부에서 객체 자신을 가르키는 단어,
base : 부모 클래스를 명시적으로 가리키는 단어.

4. 구조체에 대한 다음 설명중 틀린 것을 모두 찾으세요.

1 struct 키워드를 이용하여 선언한다.
2 복사할 때 얕은 복사가 이루어진다.
3 참조 형식이다.
4 메소드를 가질 수 있다.

2,3

5. 다음 코드를 컴파일 및 실행이 가능하도록 수정하세요.
    struct ACStting
    {
        public double currentInCelsius;
        public double target;

        public readonly double GetFahreheit()
        {
            target = currentInCelsius * 1.8 + 32;
            return target;
        }
    }
    class MainApp
    {
        static void Main(string[] args)
        {
            ACStting acs;
            acs.currentInCelsius = 25;
            acs.target = 25;

            Console.WriteLine($"{acs.GetFahreheit()}");
            Console.WriteLine($"{acs.target}");
        }
    }

=----------=

struct ACStting
{
    public double currentInCelsius;
    public double target;

    public double GetFahreheit()
    {
        return GetFahreheit(target);
    }

    public readonly double GetFahreheit(double target)
    {
        target = currentInCelsius * 1.8 + 32;
        return target;
    }
}
class MainApp
{
    static void Main(string[] args)
    {
        ACStting acs;
        acs.currentInCelsius = 25;
        acs.target = 25;

        Console.WriteLine($"{acs.GetFahreheit()}");
        Console.WriteLine($"{acs.target}");
    }
}